[{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mStats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"numeric-vector-example","dir":"Articles","previous_headings":"","what":"Numeric Vector Example","title":"Enhanced Numeric Data Categorization with cut","text":"Consider following numeric vector x:","code":"x <- 1:5 x #> [1] 1 2 3 4 5"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"single-numeric-cut-point","dir":"Articles","previous_headings":"","what":"Single Numeric Cut Point","title":"Enhanced Numeric Data Categorization with cut","text":"using single numeric cut point, cut creates equal bins similar base cut function: output divides x equal intervals based cut point, informative interval labels.","code":"cut(x, NA) cut(x, 1)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"multiple-numeric-cut-points","dir":"Articles","previous_headings":"","what":"Multiple Numeric Cut Points","title":"Enhanced Numeric Data Categorization with cut","text":"multiple elements argument, cut creates intervals based specified values: output shows intervals include specified cut points, labels format “lower value-upper value” interval.","code":"cut(x, 2) #> [1] 1-2 1-2 3-5 3-5 3-5 #> Levels: 1-2 3-5 cut(x, 5) #> [1] 1-1.7   1.8-2.5 2.6-3.3 3.4-4.1 4.2-5   #> Levels: 1-1.7 1.8-2.5 2.6-3.3 3.4-4.1 4.2-5 cut(x, c(3, 5)) #> [1] 1-2 1-2 3-5 3-5 3-5 #> Levels: 1-2 3-5"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"handling-infinite-values","dir":"Articles","previous_headings":"","what":"Handling Infinite Values","title":"Enhanced Numeric Data Categorization with cut","text":"cut also handles infinite values argument: example, -Inf represents negative infinity, Inf represents positive infinity. intervals defined accordingly, incorporating infinite values.","code":"cut(x, c(-Inf, 2, Inf)) #> [1] 1-1 2-5 2-5 2-5 2-5 #> Levels: 1-1 2-5"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"vector-based-cut-points","dir":"Articles","previous_headings":"","what":"Vector-Based Cut Points","title":"Enhanced Numeric Data Categorization with cut","text":"using vector argument, cut categorizes x based provided values: case, cut generates intervals based element vector.","code":"cut(x, 1:5) #> [1] 1-1 2-2 3-3 4-5 4-5 #> Levels: 1-1 2-2 3-3 4-5"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"invalid-at-values","dir":"Articles","previous_headings":"","what":"Invalid at Values","title":"Enhanced Numeric Data Categorization with cut","text":"cut restricts use certain values argument, NA, 1L, missing values. provides informative error messages encountering cases:","code":"cut(\"x\", 1)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"date-example","dir":"Articles","previous_headings":"","what":"Date Example","title":"Enhanced Numeric Data Categorization with cut","text":"cut can also handle date objects. Let’s consider following examples date time: example, cut categorizes dates intervals based specified cut points. time objects, cut works similarly, categorizing time values intervals based provided cut points.","code":"x <- Sys.Date() - 1:5 x #> [1] \"2023-06-15\" \"2023-06-14\" \"2023-06-13\" \"2023-06-12\" \"2023-06-11\" cut(x, 2) #> [1] 2023-06-12 2023-06-12 2023-06-12 2023-06-15 2023-06-15 #> Levels: 2023-06-15 2023-06-12 x <- Sys.time() - 1:5 x #> [1] \"2023-06-16 04:19:02 UTC\" \"2023-06-16 04:19:01 UTC\" #> [3] \"2023-06-16 04:19:00 UTC\" \"2023-06-16 04:18:59 UTC\" #> [5] \"2023-06-16 04:18:58 UTC\" cut(x, 2) #> [1] 2023-06-16 04:18:59.563331 2023-06-16 04:18:59.563331 #> [3] 2023-06-16 04:18:59.563331 2023-06-16 04:19:02.563331 #> [5] 2023-06-16 04:19:02.563331 #> Levels: 2023-06-16 04:19:02.563331 2023-06-16 04:18:59.563331"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/cut.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Enhanced Numeric Data Categorization with cut","text":"cut function mStats package offers enhanced numeric data categorization improved labeling. provides flexibility defining cut points, handles infinite values, generates informative interval labels. utilizing cut, users can easily categorize analyze numeric data, making data management tasks intuitive efficient. information additional features mStats package, please refer package documentation explore functionalities.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/egen.html","id":"egen-versus-mutate-cut","dir":"Articles","previous_headings":"","what":"egen versus mutate + cut","title":"Convert a continuous variable into groups","text":"examples, data frame data data2 single variable x created. goal group values x three categories: “low”, “medium”, “high”, based specified breakpoints.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # Example 1: Using egen() function data <- data.frame(x = 1:10) data <- egen(data, var = x, at = c(3, 7), label = c(\"low\", \"medium\", \"high\"))  # Example 2: Using mutate() and cut() functions data2 <- data.frame(x = 1:10) data2 <- mutate(data2, x = cut(x, at = c(-Inf, 3, 7, Inf), label = c(\"low\", \"medium\", \"high\")))  # Check if the results are the same identical(data, data2)  # Should be TRUE #> [1] TRUE"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"report-of-duplicates","dir":"Articles","previous_headings":"","what":"Report of duplicates","title":"Working with Duplicate Observations using `tag_duplicates`","text":"report duplciates provides information duplicate observations dataset interpreted. consists three components: copies, observations, surplus. Copies: copies column indicates number times set observations duplicated. words, shows number identical rows present dataset. Observations: observations column represents total count unique observations dataset, including original duplicated rows. Surplus: surplus column denotes number additional observations beyond first occurrence duplicated set. indicates number duplicate rows excluding original row. interpret duplicates report context tag_duplicates R function, consider following: Copies: copies value 1, means duplicates specific set variables. greater 1, indicates number duplicate sets present. Observations: observations count includes unique rows dataset, including original duplicate rows. count helps identify total number distinct observations. Surplus: surplus value represents number duplicate rows beyond first occurrence set. surplus rows need examined potentially removed. analyzing duplicates report, can identify variables combinations variables causing duplicates dataset. information can guide investigation data cleaning steps handle duplicate observations appropriately.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"appended-columns--n_--n_-and--dup_","dir":"Articles","previous_headings":"","what":"Appended columns: .n_, .N_, and .dup_","title":"Working with Duplicate Observations using `tag_duplicates`","text":"using tag_duplicates function R, function returns three columns: .n_, .N_, .dup_. ’s explanation interpret columns:","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"n_","dir":"Articles","previous_headings":"Appended columns: .n_, .N_, and .dup_","what":".n_","title":"Working with Duplicate Observations using `tag_duplicates`","text":".n_ column represents count observation dataset, including duplicates. indicates number times row appears dataset, regardless whether duplicate unique. unique observations, value column 1. observation duplicated multiple times, value greater 1. Interpretation .n_: .n_ equals 1, means observation unique duplicates dataset. .n_ greater 1, indicates observation duplicated appears multiple times dataset.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"n_-1","dir":"Articles","previous_headings":"Appended columns: .n_, .N_, and .dup_","what":".N_","title":"Working with Duplicate Observations using `tag_duplicates`","text":".N_ column represents count unique observations. provides number unique occurrences observation dataset, considering duplicates unique rows. row dataset assigned count unique occurrence. Interpretation .N_: .N_ column helps identify total number unique occurrences observation dataset, regardless whether duplicate unique. .N_ equals 1, means observation unique one occurrence dataset. .N_ greater 1, indicates observation duplicates appears multiple times dataset.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"dup_","dir":"Articles","previous_headings":"Appended columns: .n_, .N_, and .dup_","what":".dup_","title":"Working with Duplicate Observations using `tag_duplicates`","text":".dup_ column logical indicator flags whether observation duplicate . assigns value TRUE observation duplicate FALSE unique. Interpretation .dup_: .dup_ TRUE, means observation duplicate appears multiple times dataset. .dup_ FALSE, indicates observation unique duplicates. examining three columns together, can determine observations dataset duplicates, many times occur, whether observation unique duplicated. information can valuable data analysis, quality control, data cleaning processes.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"ucla-stata-duplicates-tutorial-in-r","dir":"Articles","previous_headings":"","what":"UCLA STATA duplicates Tutorial in R","title":"Working with Duplicate Observations using `tag_duplicates`","text":"Read tutorial : https://stats.oarc.ucla.edu/stata/faq/-can--detect-duplicate-observations-3/","code":"hsb2 <- haven::read_dta(\"https://stats.idre.ucla.edu/stat/stata/notes/hsb2.dta\")  hsb2_mod <- hsb2 |>      dplyr::select(id, female, ses, read, write, math) |>      dplyr::arrange(id)  hsb2_mod2 <- hsb2_mod |>      dplyr::filter(dplyr::row_number() <= 5) |>      dplyr::bind_rows(hsb2_mod) |>      dplyr::arrange(id) |>      dplyr::mutate(math = ifelse(dplyr::row_number() == 1, 84, math))  hsb2_mod2 |>      dplyr::mutate(tag_duplicates(everything())) #> $ Report of duplicates #>   in terms of all variables #>  copies observations surplus #>       1          197       0 #>       2            8       4 #> # A tibble: 205 × 9 #>       id female     ses         read write  math   .n_   .N_ .dup_ #>    <dbl> <dbl+lbl>  <dbl+lbl>  <dbl> <dbl> <dbl> <int> <int> <lgl> #>  1     1 1 [female] 1 [low]       34    44    84     1     1 FALSE #>  2     1 1 [female] 1 [low]       34    44    40     1     1 FALSE #>  3     2 1 [female] 2 [middle]    39    41    33     1     2 FALSE #>  4     2 1 [female] 2 [middle]    39    41    33     2     2 TRUE  #>  5     3 0 [male]   1 [low]       63    65    48     1     2 FALSE #>  6     3 0 [male]   1 [low]       63    65    48     2     2 TRUE  #>  7     4 1 [female] 1 [low]       44    50    41     1     2 FALSE #>  8     4 1 [female] 1 [low]       44    50    41     2     2 TRUE  #>  9     5 0 [male]   1 [low]       47    40    43     1     2 FALSE #> 10     5 0 [male]   1 [low]       47    40    43     2     2 TRUE  #> # ℹ 195 more rows  hsb2_mod2 |>      dplyr::mutate(tag_duplicates(id)) #> $ Report of duplicates #>   in terms of id #>  copies observations surplus #>       1          195       0 #>       2           10       5 #> # A tibble: 205 × 9 #>       id female     ses         read write  math   .n_   .N_ .dup_ #>    <dbl> <dbl+lbl>  <dbl+lbl>  <dbl> <dbl> <dbl> <int> <int> <lgl> #>  1     1 1 [female] 1 [low]       34    44    84     1     2 FALSE #>  2     1 1 [female] 1 [low]       34    44    40     2     2 TRUE  #>  3     2 1 [female] 2 [middle]    39    41    33     1     2 FALSE #>  4     2 1 [female] 2 [middle]    39    41    33     2     2 TRUE  #>  5     3 0 [male]   1 [low]       63    65    48     1     2 FALSE #>  6     3 0 [male]   1 [low]       63    65    48     2     2 TRUE  #>  7     4 1 [female] 1 [low]       44    50    41     1     2 FALSE #>  8     4 1 [female] 1 [low]       44    50    41     2     2 TRUE  #>  9     5 0 [male]   1 [low]       47    40    43     1     2 FALSE #> 10     5 0 [male]   1 [low]       47    40    43     2     2 TRUE  #> # ℹ 195 more rows  hsb2_mod2 |>      dplyr::mutate(tag_duplicates(id, .add_tags = TRUE)) |>      # filter duplicate observations      dplyr::filter(.dup_) #> $ Report of duplicates #>   in terms of id #>  copies observations surplus #>       1          195       0 #>       2           10       5 #> # A tibble: 5 × 9 #>      id female     ses         read write  math   .n_   .N_ .dup_ #>   <dbl> <dbl+lbl>  <dbl+lbl>  <dbl> <dbl> <dbl> <int> <int> <lgl> #> 1     1 1 [female] 1 [low]       34    44    40     2     2 TRUE  #> 2     2 1 [female] 2 [middle]    39    41    33     2     2 TRUE  #> 3     3 0 [male]   1 [low]       63    65    48     2     2 TRUE  #> 4     4 1 [female] 1 [low]       44    50    41     2     2 TRUE  #> 5     5 0 [male]   1 [low]       47    40    43     2     2 TRUE"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/articles/tag_duplicates.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Working with Duplicate Observations using `tag_duplicates`","text":"StataCorp. (2021). Stata Base Reference Manual: Duplicates. Retrieved Stata Press: https://www.stata.com/manuals/rbase/duplicates.pdf can read Stata Base Reference Manual, contains detailed information duplicates command, Stata Press website searching “Stata duplicates command” online.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Myo Minn Oo. Author, maintainer.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oo M (2023). mStats: Medical Statistics & Epidemiological Analysis. R package version 3.5.0, https://myominnoo.github.io/mStats/.","code":"@Manual{,   title = {mStats: Medical Statistics & Epidemiological Analysis},   author = {Myo Minn Oo},   year = {2023},   note = {R package version 3.5.0},   url = {https://myominnoo.github.io/mStats/}, }"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/index.html","id":"mstats","dir":"","previous_headings":"","what":"Medical Statistics & Epidemiological Analysis","title":"Medical Statistics & Epidemiological Analysis","text":"mStats provides opinionated set R wrapper functions data analysis manipulation, covering range tasks data exploration transformation regression modeling statistical summaries. serves personal collection functions developed based preferences experiences, tailored meet specific needs various projects. evolving package, continuously add new functions mStats adapt evolving needs preferences. highly opinionated package reflects unique perspective incorporates solutions found valuable data analysis workflows. using mStats, users can benefit expertise convenience centralized set functions designed address common data manipulation, analysis, visualization tasks. personalized approach ensures efficiency consistency across projects, package encompasses techniques prefer. believe mStats makes valuable contribution R community offering insights potential solutions derived experiences. showcases power customization demonstrates individual preferences can shape development tools enhance data analysis workflows.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Medical Statistics & Epidemiological Analysis","text":"Install CRAN : install development version GitHub :","code":"install.packages(\"mStats\") # install.packages(\"devtools\") devtools::install_github(\"myominnoo/mStats\")"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Medical Statistics & Epidemiological Analysis","text":"quick demonstration mStats can .","code":"library(mStats) #>  #> Attaching package: 'mStats' #> The following objects are masked from 'package:base': #>  #>     append, cut"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/index.html","id":"codebook-check-an-overview-of-the-data","dir":"","previous_headings":"Usage","what":"codebook: check an overview of the data","title":"Medical Statistics & Epidemiological Analysis","text":"","code":"codebook(mtcars) #> $ dataset: mtcars #> $ Row: 32 #> $ Col: 11 #>    name type  miss complete unique label #> 1  mpg  <dbl> 0    1.00     25           #> 2  cyl  <dbl> 0    1.00      3           #> 3  disp <dbl> 0    1.00     27           #> 4  hp   <dbl> 0    1.00     22           #> 5  drat <dbl> 0    1.00     22           #> 6  wt   <dbl> 0    1.00     29           #> 7  qsec <dbl> 0    1.00     30           #> 8  vs   <dbl> 0    1.00      2           #> 9  am   <dbl> 0    1.00      2           #> 10 gear <dbl> 0    1.00      3           #> 11 carb <dbl> 0    1.00      6"},{"path":[]},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append datasets — append","text":"","code":"append(...)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append datasets — append","text":"... Data frames combine.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append datasets — append","text":"data frame","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/append.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append datasets — append","text":"append stacks multiple datasets.","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/append.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append datasets — append","text":"","code":"append(airquality, mtcars) #> Warning: `append()` was deprecated in mStats 3.5.0. #> ℹ Please use `dplyr::bind_rows()` instead. #>                     Ozone Solar.R Wind Temp Month Day  mpg cyl  disp  hp drat #> ...1                   41     190  7.4   67     5   1   NA  NA    NA  NA   NA #> ...2                   36     118  8.0   72     5   2   NA  NA    NA  NA   NA #> ...3                   12     149 12.6   74     5   3   NA  NA    NA  NA   NA #> ...4                   18     313 11.5   62     5   4   NA  NA    NA  NA   NA #> ...5                   NA      NA 14.3   56     5   5   NA  NA    NA  NA   NA #> ...6                   28      NA 14.9   66     5   6   NA  NA    NA  NA   NA #> ...7                   23     299  8.6   65     5   7   NA  NA    NA  NA   NA #> ...8                   19      99 13.8   59     5   8   NA  NA    NA  NA   NA #> ...9                    8      19 20.1   61     5   9   NA  NA    NA  NA   NA #> ...10                  NA     194  8.6   69     5  10   NA  NA    NA  NA   NA #> ...11                   7      NA  6.9   74     5  11   NA  NA    NA  NA   NA #> ...12                  16     256  9.7   69     5  12   NA  NA    NA  NA   NA #> ...13                  11     290  9.2   66     5  13   NA  NA    NA  NA   NA #> ...14                  14     274 10.9   68     5  14   NA  NA    NA  NA   NA #> ...15                  18      65 13.2   58     5  15   NA  NA    NA  NA   NA #> ...16                  14     334 11.5   64     5  16   NA  NA    NA  NA   NA #> ...17                  34     307 12.0   66     5  17   NA  NA    NA  NA   NA #> ...18                   6      78 18.4   57     5  18   NA  NA    NA  NA   NA #> ...19                  30     322 11.5   68     5  19   NA  NA    NA  NA   NA #> ...20                  11      44  9.7   62     5  20   NA  NA    NA  NA   NA #> ...21                   1       8  9.7   59     5  21   NA  NA    NA  NA   NA #> ...22                  11     320 16.6   73     5  22   NA  NA    NA  NA   NA #> ...23                   4      25  9.7   61     5  23   NA  NA    NA  NA   NA #> ...24                  32      92 12.0   61     5  24   NA  NA    NA  NA   NA #> ...25                  NA      66 16.6   57     5  25   NA  NA    NA  NA   NA #> ...26                  NA     266 14.9   58     5  26   NA  NA    NA  NA   NA #> ...27                  NA      NA  8.0   57     5  27   NA  NA    NA  NA   NA #> ...28                  23      13 12.0   67     5  28   NA  NA    NA  NA   NA #> ...29                  45     252 14.9   81     5  29   NA  NA    NA  NA   NA #> ...30                 115     223  5.7   79     5  30   NA  NA    NA  NA   NA #> ...31                  37     279  7.4   76     5  31   NA  NA    NA  NA   NA #> ...32                  NA     286  8.6   78     6   1   NA  NA    NA  NA   NA #> ...33                  NA     287  9.7   74     6   2   NA  NA    NA  NA   NA #> ...34                  NA     242 16.1   67     6   3   NA  NA    NA  NA   NA #> ...35                  NA     186  9.2   84     6   4   NA  NA    NA  NA   NA #> ...36                  NA     220  8.6   85     6   5   NA  NA    NA  NA   NA #> ...37                  NA     264 14.3   79     6   6   NA  NA    NA  NA   NA #> ...38                  29     127  9.7   82     6   7   NA  NA    NA  NA   NA #> ...39                  NA     273  6.9   87     6   8   NA  NA    NA  NA   NA #> ...40                  71     291 13.8   90     6   9   NA  NA    NA  NA   NA #> ...41                  39     323 11.5   87     6  10   NA  NA    NA  NA   NA #> ...42                  NA     259 10.9   93     6  11   NA  NA    NA  NA   NA #> ...43                  NA     250  9.2   92     6  12   NA  NA    NA  NA   NA #> ...44                  23     148  8.0   82     6  13   NA  NA    NA  NA   NA #> ...45                  NA     332 13.8   80     6  14   NA  NA    NA  NA   NA #> ...46                  NA     322 11.5   79     6  15   NA  NA    NA  NA   NA #> ...47                  21     191 14.9   77     6  16   NA  NA    NA  NA   NA #> ...48                  37     284 20.7   72     6  17   NA  NA    NA  NA   NA #> ...49                  20      37  9.2   65     6  18   NA  NA    NA  NA   NA #> ...50                  12     120 11.5   73     6  19   NA  NA    NA  NA   NA #> ...51                  13     137 10.3   76     6  20   NA  NA    NA  NA   NA #> ...52                  NA     150  6.3   77     6  21   NA  NA    NA  NA   NA #> ...53                  NA      59  1.7   76     6  22   NA  NA    NA  NA   NA #> ...54                  NA      91  4.6   76     6  23   NA  NA    NA  NA   NA #> ...55                  NA     250  6.3   76     6  24   NA  NA    NA  NA   NA #> ...56                  NA     135  8.0   75     6  25   NA  NA    NA  NA   NA #> ...57                  NA     127  8.0   78     6  26   NA  NA    NA  NA   NA #> ...58                  NA      47 10.3   73     6  27   NA  NA    NA  NA   NA #> ...59                  NA      98 11.5   80     6  28   NA  NA    NA  NA   NA #> ...60                  NA      31 14.9   77     6  29   NA  NA    NA  NA   NA #> ...61                  NA     138  8.0   83     6  30   NA  NA    NA  NA   NA #> ...62                 135     269  4.1   84     7   1   NA  NA    NA  NA   NA #> ...63                  49     248  9.2   85     7   2   NA  NA    NA  NA   NA #> ...64                  32     236  9.2   81     7   3   NA  NA    NA  NA   NA #> ...65                  NA     101 10.9   84     7   4   NA  NA    NA  NA   NA #> ...66                  64     175  4.6   83     7   5   NA  NA    NA  NA   NA #> ...67                  40     314 10.9   83     7   6   NA  NA    NA  NA   NA #> ...68                  77     276  5.1   88     7   7   NA  NA    NA  NA   NA #> ...69                  97     267  6.3   92     7   8   NA  NA    NA  NA   NA #> ...70                  97     272  5.7   92     7   9   NA  NA    NA  NA   NA #> ...71                  85     175  7.4   89     7  10   NA  NA    NA  NA   NA #> ...72                  NA     139  8.6   82     7  11   NA  NA    NA  NA   NA #> ...73                  10     264 14.3   73     7  12   NA  NA    NA  NA   NA #> ...74                  27     175 14.9   81     7  13   NA  NA    NA  NA   NA #> ...75                  NA     291 14.9   91     7  14   NA  NA    NA  NA   NA #> ...76                   7      48 14.3   80     7  15   NA  NA    NA  NA   NA #> ...77                  48     260  6.9   81     7  16   NA  NA    NA  NA   NA #> ...78                  35     274 10.3   82     7  17   NA  NA    NA  NA   NA #> ...79                  61     285  6.3   84     7  18   NA  NA    NA  NA   NA #> ...80                  79     187  5.1   87     7  19   NA  NA    NA  NA   NA #> ...81                  63     220 11.5   85     7  20   NA  NA    NA  NA   NA #> ...82                  16       7  6.9   74     7  21   NA  NA    NA  NA   NA #> ...83                  NA     258  9.7   81     7  22   NA  NA    NA  NA   NA #> ...84                  NA     295 11.5   82     7  23   NA  NA    NA  NA   NA #> ...85                  80     294  8.6   86     7  24   NA  NA    NA  NA   NA #> ...86                 108     223  8.0   85     7  25   NA  NA    NA  NA   NA #> ...87                  20      81  8.6   82     7  26   NA  NA    NA  NA   NA #> ...88                  52      82 12.0   86     7  27   NA  NA    NA  NA   NA #> ...89                  82     213  7.4   88     7  28   NA  NA    NA  NA   NA #> ...90                  50     275  7.4   86     7  29   NA  NA    NA  NA   NA #> ...91                  64     253  7.4   83     7  30   NA  NA    NA  NA   NA #> ...92                  59     254  9.2   81     7  31   NA  NA    NA  NA   NA #> ...93                  39      83  6.9   81     8   1   NA  NA    NA  NA   NA #> ...94                   9      24 13.8   81     8   2   NA  NA    NA  NA   NA #> ...95                  16      77  7.4   82     8   3   NA  NA    NA  NA   NA #> ...96                  78      NA  6.9   86     8   4   NA  NA    NA  NA   NA #> ...97                  35      NA  7.4   85     8   5   NA  NA    NA  NA   NA #> ...98                  66      NA  4.6   87     8   6   NA  NA    NA  NA   NA #> ...99                 122     255  4.0   89     8   7   NA  NA    NA  NA   NA #> ...100                 89     229 10.3   90     8   8   NA  NA    NA  NA   NA #> ...101                110     207  8.0   90     8   9   NA  NA    NA  NA   NA #> ...102                 NA     222  8.6   92     8  10   NA  NA    NA  NA   NA #> ...103                 NA     137 11.5   86     8  11   NA  NA    NA  NA   NA #> ...104                 44     192 11.5   86     8  12   NA  NA    NA  NA   NA #> ...105                 28     273 11.5   82     8  13   NA  NA    NA  NA   NA #> ...106                 65     157  9.7   80     8  14   NA  NA    NA  NA   NA #> ...107                 NA      64 11.5   79     8  15   NA  NA    NA  NA   NA #> ...108                 22      71 10.3   77     8  16   NA  NA    NA  NA   NA #> ...109                 59      51  6.3   79     8  17   NA  NA    NA  NA   NA #> ...110                 23     115  7.4   76     8  18   NA  NA    NA  NA   NA #> ...111                 31     244 10.9   78     8  19   NA  NA    NA  NA   NA #> ...112                 44     190 10.3   78     8  20   NA  NA    NA  NA   NA #> ...113                 21     259 15.5   77     8  21   NA  NA    NA  NA   NA #> ...114                  9      36 14.3   72     8  22   NA  NA    NA  NA   NA #> ...115                 NA     255 12.6   75     8  23   NA  NA    NA  NA   NA #> ...116                 45     212  9.7   79     8  24   NA  NA    NA  NA   NA #> ...117                168     238  3.4   81     8  25   NA  NA    NA  NA   NA #> ...118                 73     215  8.0   86     8  26   NA  NA    NA  NA   NA #> ...119                 NA     153  5.7   88     8  27   NA  NA    NA  NA   NA #> ...120                 76     203  9.7   97     8  28   NA  NA    NA  NA   NA #> ...121                118     225  2.3   94     8  29   NA  NA    NA  NA   NA #> ...122                 84     237  6.3   96     8  30   NA  NA    NA  NA   NA #> ...123                 85     188  6.3   94     8  31   NA  NA    NA  NA   NA #> ...124                 96     167  6.9   91     9   1   NA  NA    NA  NA   NA #> ...125                 78     197  5.1   92     9   2   NA  NA    NA  NA   NA #> ...126                 73     183  2.8   93     9   3   NA  NA    NA  NA   NA #> ...127                 91     189  4.6   93     9   4   NA  NA    NA  NA   NA #> ...128                 47      95  7.4   87     9   5   NA  NA    NA  NA   NA #> ...129                 32      92 15.5   84     9   6   NA  NA    NA  NA   NA #> ...130                 20     252 10.9   80     9   7   NA  NA    NA  NA   NA #> ...131                 23     220 10.3   78     9   8   NA  NA    NA  NA   NA #> ...132                 21     230 10.9   75     9   9   NA  NA    NA  NA   NA #> ...133                 24     259  9.7   73     9  10   NA  NA    NA  NA   NA #> ...134                 44     236 14.9   81     9  11   NA  NA    NA  NA   NA #> ...135                 21     259 15.5   76     9  12   NA  NA    NA  NA   NA #> ...136                 28     238  6.3   77     9  13   NA  NA    NA  NA   NA #> ...137                  9      24 10.9   71     9  14   NA  NA    NA  NA   NA #> ...138                 13     112 11.5   71     9  15   NA  NA    NA  NA   NA #> ...139                 46     237  6.9   78     9  16   NA  NA    NA  NA   NA #> ...140                 18     224 13.8   67     9  17   NA  NA    NA  NA   NA #> ...141                 13      27 10.3   76     9  18   NA  NA    NA  NA   NA #> ...142                 24     238 10.3   68     9  19   NA  NA    NA  NA   NA #> ...143                 16     201  8.0   82     9  20   NA  NA    NA  NA   NA #> ...144                 13     238 12.6   64     9  21   NA  NA    NA  NA   NA #> ...145                 23      14  9.2   71     9  22   NA  NA    NA  NA   NA #> ...146                 36     139 10.3   81     9  23   NA  NA    NA  NA   NA #> ...147                  7      49 10.3   69     9  24   NA  NA    NA  NA   NA #> ...148                 14      20 16.6   63     9  25   NA  NA    NA  NA   NA #> ...149                 30     193  6.9   70     9  26   NA  NA    NA  NA   NA #> ...150                 NA     145 13.2   77     9  27   NA  NA    NA  NA   NA #> ...151                 14     191 14.3   75     9  28   NA  NA    NA  NA   NA #> ...152                 18     131  8.0   76     9  29   NA  NA    NA  NA   NA #> ...153                 20     223 11.5   68     9  30   NA  NA    NA  NA   NA #> Mazda RX4              NA      NA   NA   NA    NA  NA 21.0   6 160.0 110 3.90 #> Mazda RX4 Wag          NA      NA   NA   NA    NA  NA 21.0   6 160.0 110 3.90 #> Datsun 710             NA      NA   NA   NA    NA  NA 22.8   4 108.0  93 3.85 #> Hornet 4 Drive         NA      NA   NA   NA    NA  NA 21.4   6 258.0 110 3.08 #> Hornet Sportabout      NA      NA   NA   NA    NA  NA 18.7   8 360.0 175 3.15 #> Valiant                NA      NA   NA   NA    NA  NA 18.1   6 225.0 105 2.76 #> Duster 360             NA      NA   NA   NA    NA  NA 14.3   8 360.0 245 3.21 #> Merc 240D              NA      NA   NA   NA    NA  NA 24.4   4 146.7  62 3.69 #> Merc 230               NA      NA   NA   NA    NA  NA 22.8   4 140.8  95 3.92 #> Merc 280               NA      NA   NA   NA    NA  NA 19.2   6 167.6 123 3.92 #> Merc 280C              NA      NA   NA   NA    NA  NA 17.8   6 167.6 123 3.92 #> Merc 450SE             NA      NA   NA   NA    NA  NA 16.4   8 275.8 180 3.07 #> Merc 450SL             NA      NA   NA   NA    NA  NA 17.3   8 275.8 180 3.07 #> Merc 450SLC            NA      NA   NA   NA    NA  NA 15.2   8 275.8 180 3.07 #> Cadillac Fleetwood     NA      NA   NA   NA    NA  NA 10.4   8 472.0 205 2.93 #> Lincoln Continental    NA      NA   NA   NA    NA  NA 10.4   8 460.0 215 3.00 #> Chrysler Imperial      NA      NA   NA   NA    NA  NA 14.7   8 440.0 230 3.23 #> Fiat 128               NA      NA   NA   NA    NA  NA 32.4   4  78.7  66 4.08 #> Honda Civic            NA      NA   NA   NA    NA  NA 30.4   4  75.7  52 4.93 #> Toyota Corolla         NA      NA   NA   NA    NA  NA 33.9   4  71.1  65 4.22 #> Toyota Corona          NA      NA   NA   NA    NA  NA 21.5   4 120.1  97 3.70 #> Dodge Challenger       NA      NA   NA   NA    NA  NA 15.5   8 318.0 150 2.76 #> AMC Javelin            NA      NA   NA   NA    NA  NA 15.2   8 304.0 150 3.15 #> Camaro Z28             NA      NA   NA   NA    NA  NA 13.3   8 350.0 245 3.73 #> Pontiac Firebird       NA      NA   NA   NA    NA  NA 19.2   8 400.0 175 3.08 #> Fiat X1-9              NA      NA   NA   NA    NA  NA 27.3   4  79.0  66 4.08 #> Porsche 914-2          NA      NA   NA   NA    NA  NA 26.0   4 120.3  91 4.43 #> Lotus Europa           NA      NA   NA   NA    NA  NA 30.4   4  95.1 113 3.77 #> Ford Pantera L         NA      NA   NA   NA    NA  NA 15.8   8 351.0 264 4.22 #> Ferrari Dino           NA      NA   NA   NA    NA  NA 19.7   6 145.0 175 3.62 #> Maserati Bora          NA      NA   NA   NA    NA  NA 15.0   8 301.0 335 3.54 #> Volvo 142E             NA      NA   NA   NA    NA  NA 21.4   4 121.0 109 4.11 #>                        wt  qsec vs am gear carb #> ...1                   NA    NA NA NA   NA   NA #> ...2                   NA    NA NA NA   NA   NA #> ...3                   NA    NA NA NA   NA   NA #> ...4                   NA    NA NA NA   NA   NA #> ...5                   NA    NA NA NA   NA   NA #> ...6                   NA    NA NA NA   NA   NA #> ...7                   NA    NA NA NA   NA   NA #> ...8                   NA    NA NA NA   NA   NA #> ...9                   NA    NA NA NA   NA   NA #> ...10                  NA    NA NA NA   NA   NA #> ...11                  NA    NA NA NA   NA   NA #> ...12                  NA    NA NA NA   NA   NA #> ...13                  NA    NA NA NA   NA   NA #> ...14                  NA    NA NA NA   NA   NA #> ...15                  NA    NA NA NA   NA   NA #> ...16                  NA    NA NA NA   NA   NA #> ...17                  NA    NA NA NA   NA   NA #> ...18                  NA    NA NA NA   NA   NA #> ...19                  NA    NA NA NA   NA   NA #> ...20                  NA    NA NA NA   NA   NA #> ...21                  NA    NA NA NA   NA   NA #> ...22                  NA    NA NA NA   NA   NA #> ...23                  NA    NA NA NA   NA   NA #> ...24                  NA    NA NA NA   NA   NA #> ...25                  NA    NA NA NA   NA   NA #> ...26                  NA    NA NA NA   NA   NA #> ...27                  NA    NA NA NA   NA   NA #> ...28                  NA    NA NA NA   NA   NA #> ...29                  NA    NA NA NA   NA   NA #> ...30                  NA    NA NA NA   NA   NA #> ...31                  NA    NA NA NA   NA   NA #> ...32                  NA    NA NA NA   NA   NA #> ...33                  NA    NA NA NA   NA   NA #> ...34                  NA    NA NA NA   NA   NA #> ...35                  NA    NA NA NA   NA   NA #> ...36                  NA    NA NA NA   NA   NA #> ...37                  NA    NA NA NA   NA   NA #> ...38                  NA    NA NA NA   NA   NA #> ...39                  NA    NA NA NA   NA   NA #> ...40                  NA    NA NA NA   NA   NA #> ...41                  NA    NA NA NA   NA   NA #> ...42                  NA    NA NA NA   NA   NA #> ...43                  NA    NA NA NA   NA   NA #> ...44                  NA    NA NA NA   NA   NA #> ...45                  NA    NA NA NA   NA   NA #> ...46                  NA    NA NA NA   NA   NA #> ...47                  NA    NA NA NA   NA   NA #> ...48                  NA    NA NA NA   NA   NA #> ...49                  NA    NA NA NA   NA   NA #> ...50                  NA    NA NA NA   NA   NA #> ...51                  NA    NA NA NA   NA   NA #> ...52                  NA    NA NA NA   NA   NA #> ...53                  NA    NA NA NA   NA   NA #> ...54                  NA    NA NA NA   NA   NA #> ...55                  NA    NA NA NA   NA   NA #> ...56                  NA    NA NA NA   NA   NA #> ...57                  NA    NA NA NA   NA   NA #> ...58                  NA    NA NA NA   NA   NA #> ...59                  NA    NA NA NA   NA   NA #> ...60                  NA    NA NA NA   NA   NA #> ...61                  NA    NA NA NA   NA   NA #> ...62                  NA    NA NA NA   NA   NA #> ...63                  NA    NA NA NA   NA   NA #> ...64                  NA    NA NA NA   NA   NA #> ...65                  NA    NA NA NA   NA   NA #> ...66                  NA    NA NA NA   NA   NA #> ...67                  NA    NA NA NA   NA   NA #> ...68                  NA    NA NA NA   NA   NA #> ...69                  NA    NA NA NA   NA   NA #> ...70                  NA    NA NA NA   NA   NA #> ...71                  NA    NA NA NA   NA   NA #> ...72                  NA    NA NA NA   NA   NA #> ...73                  NA    NA NA NA   NA   NA #> ...74                  NA    NA NA NA   NA   NA #> ...75                  NA    NA NA NA   NA   NA #> ...76                  NA    NA NA NA   NA   NA #> ...77                  NA    NA NA NA   NA   NA #> ...78                  NA    NA NA NA   NA   NA #> ...79                  NA    NA NA NA   NA   NA #> ...80                  NA    NA NA NA   NA   NA #> ...81                  NA    NA NA NA   NA   NA #> ...82                  NA    NA NA NA   NA   NA #> ...83                  NA    NA NA NA   NA   NA #> ...84                  NA    NA NA NA   NA   NA #> ...85                  NA    NA NA NA   NA   NA #> ...86                  NA    NA NA NA   NA   NA #> ...87                  NA    NA NA NA   NA   NA #> ...88                  NA    NA NA NA   NA   NA #> ...89                  NA    NA NA NA   NA   NA #> ...90                  NA    NA NA NA   NA   NA #> ...91                  NA    NA NA NA   NA   NA #> ...92                  NA    NA NA NA   NA   NA #> ...93                  NA    NA NA NA   NA   NA #> ...94                  NA    NA NA NA   NA   NA #> ...95                  NA    NA NA NA   NA   NA #> ...96                  NA    NA NA NA   NA   NA #> ...97                  NA    NA NA NA   NA   NA #> ...98                  NA    NA NA NA   NA   NA #> ...99                  NA    NA NA NA   NA   NA #> ...100                 NA    NA NA NA   NA   NA #> ...101                 NA    NA NA NA   NA   NA #> ...102                 NA    NA NA NA   NA   NA #> ...103                 NA    NA NA NA   NA   NA #> ...104                 NA    NA NA NA   NA   NA #> ...105                 NA    NA NA NA   NA   NA #> ...106                 NA    NA NA NA   NA   NA #> ...107                 NA    NA NA NA   NA   NA #> ...108                 NA    NA NA NA   NA   NA #> ...109                 NA    NA NA NA   NA   NA #> ...110                 NA    NA NA NA   NA   NA #> ...111                 NA    NA NA NA   NA   NA #> ...112                 NA    NA NA NA   NA   NA #> ...113                 NA    NA NA NA   NA   NA #> ...114                 NA    NA NA NA   NA   NA #> ...115                 NA    NA NA NA   NA   NA #> ...116                 NA    NA NA NA   NA   NA #> ...117                 NA    NA NA NA   NA   NA #> ...118                 NA    NA NA NA   NA   NA #> ...119                 NA    NA NA NA   NA   NA #> ...120                 NA    NA NA NA   NA   NA #> ...121                 NA    NA NA NA   NA   NA #> ...122                 NA    NA NA NA   NA   NA #> ...123                 NA    NA NA NA   NA   NA #> ...124                 NA    NA NA NA   NA   NA #> ...125                 NA    NA NA NA   NA   NA #> ...126                 NA    NA NA NA   NA   NA #> ...127                 NA    NA NA NA   NA   NA #> ...128                 NA    NA NA NA   NA   NA #> ...129                 NA    NA NA NA   NA   NA #> ...130                 NA    NA NA NA   NA   NA #> ...131                 NA    NA NA NA   NA   NA #> ...132                 NA    NA NA NA   NA   NA #> ...133                 NA    NA NA NA   NA   NA #> ...134                 NA    NA NA NA   NA   NA #> ...135                 NA    NA NA NA   NA   NA #> ...136                 NA    NA NA NA   NA   NA #> ...137                 NA    NA NA NA   NA   NA #> ...138                 NA    NA NA NA   NA   NA #> ...139                 NA    NA NA NA   NA   NA #> ...140                 NA    NA NA NA   NA   NA #> ...141                 NA    NA NA NA   NA   NA #> ...142                 NA    NA NA NA   NA   NA #> ...143                 NA    NA NA NA   NA   NA #> ...144                 NA    NA NA NA   NA   NA #> ...145                 NA    NA NA NA   NA   NA #> ...146                 NA    NA NA NA   NA   NA #> ...147                 NA    NA NA NA   NA   NA #> ...148                 NA    NA NA NA   NA   NA #> ...149                 NA    NA NA NA   NA   NA #> ...150                 NA    NA NA NA   NA   NA #> ...151                 NA    NA NA NA   NA   NA #> ...152                 NA    NA NA NA   NA   NA #> ...153                 NA    NA NA NA   NA   NA #> Mazda RX4           2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       2.875 17.02  0  1    4    4 #> Datsun 710          2.320 18.61  1  1    4    1 #> Hornet 4 Drive      3.215 19.44  1  0    3    1 #> Hornet Sportabout   3.440 17.02  0  0    3    2 #> Valiant             3.460 20.22  1  0    3    1 #> Duster 360          3.570 15.84  0  0    3    4 #> Merc 240D           3.190 20.00  1  0    4    2 #> Merc 230            3.150 22.90  1  0    4    2 #> Merc 280            3.440 18.30  1  0    4    4 #> Merc 280C           3.440 18.90  1  0    4    4 #> Merc 450SE          4.070 17.40  0  0    3    3 #> Merc 450SL          3.730 17.60  0  0    3    3 #> Merc 450SLC         3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  5.250 17.98  0  0    3    4 #> Lincoln Continental 5.424 17.82  0  0    3    4 #> Chrysler Imperial   5.345 17.42  0  0    3    4 #> Fiat 128            2.200 19.47  1  1    4    1 #> Honda Civic         1.615 18.52  1  1    4    2 #> Toyota Corolla      1.835 19.90  1  1    4    1 #> Toyota Corona       2.465 20.01  1  0    3    1 #> Dodge Challenger    3.520 16.87  0  0    3    2 #> AMC Javelin         3.435 17.30  0  0    3    2 #> Camaro Z28          3.840 15.41  0  0    3    4 #> Pontiac Firebird    3.845 17.05  0  0    3    2 #> Fiat X1-9           1.935 18.90  1  1    4    1 #> Porsche 914-2       2.140 16.70  0  1    5    2 #> Lotus Europa        1.513 16.90  1  1    5    2 #> Ford Pantera L      3.170 14.50  0  1    5    4 #> Ferrari Dino        2.770 15.50  0  1    5    6 #> Maserati Bora       3.570 14.60  0  1    5    8 #> Volvo 142E          2.780 18.60  1  1    4    2"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a codebook — codebook","title":"Generate a codebook — codebook","text":"codebook function generates codebook given dataset. provides summary dataset's structure characteristics, including variable names, types, missing values, completeness percentages, unique value counts, variable labels (available).","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a codebook — codebook","text":"","code":"codebook(data)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a codebook — codebook","text":"data dataset codebook generated.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a codebook — codebook","text":"input dataset returned invisibly, allowing codebook() used within data pipe line.","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a codebook — codebook","text":"","code":"codebook(mtcars) #> $ dataset: mtcars #> $ Row: 32 #> $ Col: 11 #>    name type  miss complete unique label #> 1  mpg  <dbl> 0    1.00     25           #> 2  cyl  <dbl> 0    1.00      3           #> 3  disp <dbl> 0    1.00     27           #> 4  hp   <dbl> 0    1.00     22           #> 5  drat <dbl> 0    1.00     22           #> 6  wt   <dbl> 0    1.00     29           #> 7  qsec <dbl> 0    1.00     30           #> 8  vs   <dbl> 0    1.00      2           #> 9  am   <dbl> 0    1.00      2           #> 10 gear <dbl> 0    1.00      3           #> 11 carb <dbl> 0    1.00      6            codebook(iris) #> $ dataset: iris #> $ Row: 150 #> $ Col: 5 #>   name         type  miss complete unique label #> 1 Sepal.Length <dbl> 0    1.00     35           #> 2 Sepal.Width  <dbl> 0    1.00     23           #> 3 Petal.Length <dbl> 0    1.00     43           #> 4 Petal.Width  <dbl> 0    1.00     22           #> 5 Species      <fct> 0    1.00      3            labelled::var_label(iris) <- c(   \"sepal length\", \"sepal width\", \"petal length\",   \"petal width\", \"species\" ) codebook(iris) #> $ dataset: iris #> $ Row: 150 #> $ Col: 5 #>   name         type  miss complete unique label        #> 1 Sepal.Length <dbl> 0    1.00     35     sepal length #> 2 Sepal.Width  <dbl> 0    1.00     23     sepal width  #> 3 Petal.Length <dbl> 0    1.00     43     petal length #> 4 Petal.Width  <dbl> 0    1.00     22     petal width  #> 5 Species      <fct> 0    1.00      3     species"},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/count_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count from n to N — count_functions","text":"","code":"n_(...)  N_(...)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/count_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count from n to N — count_functions","text":"... <tidy-select> Columns pick. pick grouping columns already automatically handled verb (.e. summarise() mutate()).","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/count_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count from n to N — count_functions","text":"numeric vector representing count n N.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/count_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count from n to N — count_functions","text":"functions used indexing observations generating sequences numbers. n_() generates running counter within group variables represents number current observation. N_() provides total count within group variables. can operations using dplyr::n() way. See examples using iris dataset. iris |> mutate(.N_ = n()) |> head() iris |> mutate(.n_ = 1:n()) |> head() iris |> group_by(Species) |> mutate(.n_ = 1:n()) |> slice(1:5) |> ungroup()","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/count_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count from n to N — count_functions","text":"","code":"# Example with a custom dataset df <- data.frame(   x = c(1, 1, 2, 2, 2, 3, 4, 4, 4, 4),   y = letters[1:10] )  library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Generate a running counter for each observation within the \"x\" group using mutate() mutate(df, n = n_(x)) #>    x y n #> 1  1 a 1 #> 2  1 b 2 #> 3  2 c 1 #> 4  2 d 2 #> 5  2 e 3 #> 6  3 f 1 #> 7  4 g 1 #> 8  4 h 2 #> 9  4 i 3 #> 10 4 j 4  # Generate a running counter for each observation for all columns using mutate() mutate(df, n = n_(everything())) #>    x y n #> 1  1 a 1 #> 2  1 b 1 #> 3  2 c 1 #> 4  2 d 1 #> 5  2 e 1 #> 6  3 f 1 #> 7  4 g 1 #> 8  4 h 1 #> 9  4 i 1 #> 10 4 j 1  # Generate the total count of observations using summarise() reframe(df, n = n_(x)) #>    n #> 1  1 #> 2  2 #> 3  1 #> 4  2 #> 5  3 #> 6  1 #> 7  1 #> 8  2 #> 9  3 #> 10 4  # Generate the total count of observations within the \"x\" group using summarise() mutate(df, N = N_(everything())) #>    x y N #> 1  1 a 1 #> 2  1 b 1 #> 3  2 c 1 #> 4  2 d 1 #> 5  2 e 1 #> 6  3 f 1 #> 7  4 g 1 #> 8  4 h 1 #> 9  4 i 1 #> 10 4 j 1 mutate(df, N = N_(x)) #>    x y N #> 1  1 a 2 #> 2  1 b 2 #> 3  2 c 3 #> 4  2 d 3 #> 5  2 e 3 #> 6  3 f 1 #> 7  4 g 4 #> 8  4 h 4 #> 9  4 i 4 #> 10 4 j 4 reframe(df, N = N_(x)) #>    N #> 1  2 #> 2  2 #> 3  3 #> 4  3 #> 5  3 #> 6  1 #> 7  4 #> 8  4 #> 9  4 #> 10 4  # iris dataset mutate(iris, n = n_(everything())) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species n #> 1            5.1         3.5          1.4         0.2     setosa 1 #> 2            4.9         3.0          1.4         0.2     setosa 1 #> 3            4.7         3.2          1.3         0.2     setosa 1 #> 4            4.6         3.1          1.5         0.2     setosa 1 #> 5            5.0         3.6          1.4         0.2     setosa 1 #> 6            5.4         3.9          1.7         0.4     setosa 1 #> 7            4.6         3.4          1.4         0.3     setosa 1 #> 8            5.0         3.4          1.5         0.2     setosa 1 #> 9            4.4         2.9          1.4         0.2     setosa 1 #> 10           4.9         3.1          1.5         0.1     setosa 1 #> 11           5.4         3.7          1.5         0.2     setosa 1 #> 12           4.8         3.4          1.6         0.2     setosa 1 #> 13           4.8         3.0          1.4         0.1     setosa 1 #> 14           4.3         3.0          1.1         0.1     setosa 1 #> 15           5.8         4.0          1.2         0.2     setosa 1 #> 16           5.7         4.4          1.5         0.4     setosa 1 #> 17           5.4         3.9          1.3         0.4     setosa 1 #> 18           5.1         3.5          1.4         0.3     setosa 1 #> 19           5.7         3.8          1.7         0.3     setosa 1 #> 20           5.1         3.8          1.5         0.3     setosa 1 #> 21           5.4         3.4          1.7         0.2     setosa 1 #> 22           5.1         3.7          1.5         0.4     setosa 1 #> 23           4.6         3.6          1.0         0.2     setosa 1 #> 24           5.1         3.3          1.7         0.5     setosa 1 #> 25           4.8         3.4          1.9         0.2     setosa 1 #> 26           5.0         3.0          1.6         0.2     setosa 1 #> 27           5.0         3.4          1.6         0.4     setosa 1 #> 28           5.2         3.5          1.5         0.2     setosa 1 #> 29           5.2         3.4          1.4         0.2     setosa 1 #> 30           4.7         3.2          1.6         0.2     setosa 1 #> 31           4.8         3.1          1.6         0.2     setosa 1 #> 32           5.4         3.4          1.5         0.4     setosa 1 #> 33           5.2         4.1          1.5         0.1     setosa 1 #> 34           5.5         4.2          1.4         0.2     setosa 1 #> 35           4.9         3.1          1.5         0.2     setosa 1 #> 36           5.0         3.2          1.2         0.2     setosa 1 #> 37           5.5         3.5          1.3         0.2     setosa 1 #> 38           4.9         3.6          1.4         0.1     setosa 1 #> 39           4.4         3.0          1.3         0.2     setosa 1 #> 40           5.1         3.4          1.5         0.2     setosa 1 #> 41           5.0         3.5          1.3         0.3     setosa 1 #> 42           4.5         2.3          1.3         0.3     setosa 1 #> 43           4.4         3.2          1.3         0.2     setosa 1 #> 44           5.0         3.5          1.6         0.6     setosa 1 #> 45           5.1         3.8          1.9         0.4     setosa 1 #> 46           4.8         3.0          1.4         0.3     setosa 1 #> 47           5.1         3.8          1.6         0.2     setosa 1 #> 48           4.6         3.2          1.4         0.2     setosa 1 #> 49           5.3         3.7          1.5         0.2     setosa 1 #> 50           5.0         3.3          1.4         0.2     setosa 1 #> 51           7.0         3.2          4.7         1.4 versicolor 1 #> 52           6.4         3.2          4.5         1.5 versicolor 1 #> 53           6.9         3.1          4.9         1.5 versicolor 1 #> 54           5.5         2.3          4.0         1.3 versicolor 1 #> 55           6.5         2.8          4.6         1.5 versicolor 1 #> 56           5.7         2.8          4.5         1.3 versicolor 1 #> 57           6.3         3.3          4.7         1.6 versicolor 1 #> 58           4.9         2.4          3.3         1.0 versicolor 1 #> 59           6.6         2.9          4.6         1.3 versicolor 1 #> 60           5.2         2.7          3.9         1.4 versicolor 1 #> 61           5.0         2.0          3.5         1.0 versicolor 1 #> 62           5.9         3.0          4.2         1.5 versicolor 1 #> 63           6.0         2.2          4.0         1.0 versicolor 1 #> 64           6.1         2.9          4.7         1.4 versicolor 1 #> 65           5.6         2.9          3.6         1.3 versicolor 1 #> 66           6.7         3.1          4.4         1.4 versicolor 1 #> 67           5.6         3.0          4.5         1.5 versicolor 1 #> 68           5.8         2.7          4.1         1.0 versicolor 1 #> 69           6.2         2.2          4.5         1.5 versicolor 1 #> 70           5.6         2.5          3.9         1.1 versicolor 1 #> 71           5.9         3.2          4.8         1.8 versicolor 1 #> 72           6.1         2.8          4.0         1.3 versicolor 1 #> 73           6.3         2.5          4.9         1.5 versicolor 1 #> 74           6.1         2.8          4.7         1.2 versicolor 1 #> 75           6.4         2.9          4.3         1.3 versicolor 1 #> 76           6.6         3.0          4.4         1.4 versicolor 1 #> 77           6.8         2.8          4.8         1.4 versicolor 1 #> 78           6.7         3.0          5.0         1.7 versicolor 1 #> 79           6.0         2.9          4.5         1.5 versicolor 1 #> 80           5.7         2.6          3.5         1.0 versicolor 1 #> 81           5.5         2.4          3.8         1.1 versicolor 1 #> 82           5.5         2.4          3.7         1.0 versicolor 1 #> 83           5.8         2.7          3.9         1.2 versicolor 1 #> 84           6.0         2.7          5.1         1.6 versicolor 1 #> 85           5.4         3.0          4.5         1.5 versicolor 1 #> 86           6.0         3.4          4.5         1.6 versicolor 1 #> 87           6.7         3.1          4.7         1.5 versicolor 1 #> 88           6.3         2.3          4.4         1.3 versicolor 1 #> 89           5.6         3.0          4.1         1.3 versicolor 1 #> 90           5.5         2.5          4.0         1.3 versicolor 1 #> 91           5.5         2.6          4.4         1.2 versicolor 1 #> 92           6.1         3.0          4.6         1.4 versicolor 1 #> 93           5.8         2.6          4.0         1.2 versicolor 1 #> 94           5.0         2.3          3.3         1.0 versicolor 1 #> 95           5.6         2.7          4.2         1.3 versicolor 1 #> 96           5.7         3.0          4.2         1.2 versicolor 1 #> 97           5.7         2.9          4.2         1.3 versicolor 1 #> 98           6.2         2.9          4.3         1.3 versicolor 1 #> 99           5.1         2.5          3.0         1.1 versicolor 1 #> 100          5.7         2.8          4.1         1.3 versicolor 1 #> 101          6.3         3.3          6.0         2.5  virginica 1 #> 102          5.8         2.7          5.1         1.9  virginica 1 #> 103          7.1         3.0          5.9         2.1  virginica 1 #> 104          6.3         2.9          5.6         1.8  virginica 1 #> 105          6.5         3.0          5.8         2.2  virginica 1 #> 106          7.6         3.0          6.6         2.1  virginica 1 #> 107          4.9         2.5          4.5         1.7  virginica 1 #> 108          7.3         2.9          6.3         1.8  virginica 1 #> 109          6.7         2.5          5.8         1.8  virginica 1 #> 110          7.2         3.6          6.1         2.5  virginica 1 #> 111          6.5         3.2          5.1         2.0  virginica 1 #> 112          6.4         2.7          5.3         1.9  virginica 1 #> 113          6.8         3.0          5.5         2.1  virginica 1 #> 114          5.7         2.5          5.0         2.0  virginica 1 #> 115          5.8         2.8          5.1         2.4  virginica 1 #> 116          6.4         3.2          5.3         2.3  virginica 1 #> 117          6.5         3.0          5.5         1.8  virginica 1 #> 118          7.7         3.8          6.7         2.2  virginica 1 #> 119          7.7         2.6          6.9         2.3  virginica 1 #> 120          6.0         2.2          5.0         1.5  virginica 1 #> 121          6.9         3.2          5.7         2.3  virginica 1 #> 122          5.6         2.8          4.9         2.0  virginica 1 #> 123          7.7         2.8          6.7         2.0  virginica 1 #> 124          6.3         2.7          4.9         1.8  virginica 1 #> 125          6.7         3.3          5.7         2.1  virginica 1 #> 126          7.2         3.2          6.0         1.8  virginica 1 #> 127          6.2         2.8          4.8         1.8  virginica 1 #> 128          6.1         3.0          4.9         1.8  virginica 1 #> 129          6.4         2.8          5.6         2.1  virginica 1 #> 130          7.2         3.0          5.8         1.6  virginica 1 #> 131          7.4         2.8          6.1         1.9  virginica 1 #> 132          7.9         3.8          6.4         2.0  virginica 1 #> 133          6.4         2.8          5.6         2.2  virginica 1 #> 134          6.3         2.8          5.1         1.5  virginica 1 #> 135          6.1         2.6          5.6         1.4  virginica 1 #> 136          7.7         3.0          6.1         2.3  virginica 1 #> 137          6.3         3.4          5.6         2.4  virginica 1 #> 138          6.4         3.1          5.5         1.8  virginica 1 #> 139          6.0         3.0          4.8         1.8  virginica 1 #> 140          6.9         3.1          5.4         2.1  virginica 1 #> 141          6.7         3.1          5.6         2.4  virginica 1 #> 142          6.9         3.1          5.1         2.3  virginica 1 #> 143          5.8         2.7          5.1         1.9  virginica 2 #> 144          6.8         3.2          5.9         2.3  virginica 1 #> 145          6.7         3.3          5.7         2.5  virginica 1 #> 146          6.7         3.0          5.2         2.3  virginica 1 #> 147          6.3         2.5          5.0         1.9  virginica 1 #> 148          6.5         3.0          5.2         2.0  virginica 1 #> 149          6.2         3.4          5.4         2.3  virginica 1 #> 150          5.9         3.0          5.1         1.8  virginica 1 mutate(iris, N = N_(everything())) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species N #> 1            5.1         3.5          1.4         0.2     setosa 1 #> 2            4.9         3.0          1.4         0.2     setosa 1 #> 3            4.7         3.2          1.3         0.2     setosa 1 #> 4            4.6         3.1          1.5         0.2     setosa 1 #> 5            5.0         3.6          1.4         0.2     setosa 1 #> 6            5.4         3.9          1.7         0.4     setosa 1 #> 7            4.6         3.4          1.4         0.3     setosa 1 #> 8            5.0         3.4          1.5         0.2     setosa 1 #> 9            4.4         2.9          1.4         0.2     setosa 1 #> 10           4.9         3.1          1.5         0.1     setosa 1 #> 11           5.4         3.7          1.5         0.2     setosa 1 #> 12           4.8         3.4          1.6         0.2     setosa 1 #> 13           4.8         3.0          1.4         0.1     setosa 1 #> 14           4.3         3.0          1.1         0.1     setosa 1 #> 15           5.8         4.0          1.2         0.2     setosa 1 #> 16           5.7         4.4          1.5         0.4     setosa 1 #> 17           5.4         3.9          1.3         0.4     setosa 1 #> 18           5.1         3.5          1.4         0.3     setosa 1 #> 19           5.7         3.8          1.7         0.3     setosa 1 #> 20           5.1         3.8          1.5         0.3     setosa 1 #> 21           5.4         3.4          1.7         0.2     setosa 1 #> 22           5.1         3.7          1.5         0.4     setosa 1 #> 23           4.6         3.6          1.0         0.2     setosa 1 #> 24           5.1         3.3          1.7         0.5     setosa 1 #> 25           4.8         3.4          1.9         0.2     setosa 1 #> 26           5.0         3.0          1.6         0.2     setosa 1 #> 27           5.0         3.4          1.6         0.4     setosa 1 #> 28           5.2         3.5          1.5         0.2     setosa 1 #> 29           5.2         3.4          1.4         0.2     setosa 1 #> 30           4.7         3.2          1.6         0.2     setosa 1 #> 31           4.8         3.1          1.6         0.2     setosa 1 #> 32           5.4         3.4          1.5         0.4     setosa 1 #> 33           5.2         4.1          1.5         0.1     setosa 1 #> 34           5.5         4.2          1.4         0.2     setosa 1 #> 35           4.9         3.1          1.5         0.2     setosa 1 #> 36           5.0         3.2          1.2         0.2     setosa 1 #> 37           5.5         3.5          1.3         0.2     setosa 1 #> 38           4.9         3.6          1.4         0.1     setosa 1 #> 39           4.4         3.0          1.3         0.2     setosa 1 #> 40           5.1         3.4          1.5         0.2     setosa 1 #> 41           5.0         3.5          1.3         0.3     setosa 1 #> 42           4.5         2.3          1.3         0.3     setosa 1 #> 43           4.4         3.2          1.3         0.2     setosa 1 #> 44           5.0         3.5          1.6         0.6     setosa 1 #> 45           5.1         3.8          1.9         0.4     setosa 1 #> 46           4.8         3.0          1.4         0.3     setosa 1 #> 47           5.1         3.8          1.6         0.2     setosa 1 #> 48           4.6         3.2          1.4         0.2     setosa 1 #> 49           5.3         3.7          1.5         0.2     setosa 1 #> 50           5.0         3.3          1.4         0.2     setosa 1 #> 51           7.0         3.2          4.7         1.4 versicolor 1 #> 52           6.4         3.2          4.5         1.5 versicolor 1 #> 53           6.9         3.1          4.9         1.5 versicolor 1 #> 54           5.5         2.3          4.0         1.3 versicolor 1 #> 55           6.5         2.8          4.6         1.5 versicolor 1 #> 56           5.7         2.8          4.5         1.3 versicolor 1 #> 57           6.3         3.3          4.7         1.6 versicolor 1 #> 58           4.9         2.4          3.3         1.0 versicolor 1 #> 59           6.6         2.9          4.6         1.3 versicolor 1 #> 60           5.2         2.7          3.9         1.4 versicolor 1 #> 61           5.0         2.0          3.5         1.0 versicolor 1 #> 62           5.9         3.0          4.2         1.5 versicolor 1 #> 63           6.0         2.2          4.0         1.0 versicolor 1 #> 64           6.1         2.9          4.7         1.4 versicolor 1 #> 65           5.6         2.9          3.6         1.3 versicolor 1 #> 66           6.7         3.1          4.4         1.4 versicolor 1 #> 67           5.6         3.0          4.5         1.5 versicolor 1 #> 68           5.8         2.7          4.1         1.0 versicolor 1 #> 69           6.2         2.2          4.5         1.5 versicolor 1 #> 70           5.6         2.5          3.9         1.1 versicolor 1 #> 71           5.9         3.2          4.8         1.8 versicolor 1 #> 72           6.1         2.8          4.0         1.3 versicolor 1 #> 73           6.3         2.5          4.9         1.5 versicolor 1 #> 74           6.1         2.8          4.7         1.2 versicolor 1 #> 75           6.4         2.9          4.3         1.3 versicolor 1 #> 76           6.6         3.0          4.4         1.4 versicolor 1 #> 77           6.8         2.8          4.8         1.4 versicolor 1 #> 78           6.7         3.0          5.0         1.7 versicolor 1 #> 79           6.0         2.9          4.5         1.5 versicolor 1 #> 80           5.7         2.6          3.5         1.0 versicolor 1 #> 81           5.5         2.4          3.8         1.1 versicolor 1 #> 82           5.5         2.4          3.7         1.0 versicolor 1 #> 83           5.8         2.7          3.9         1.2 versicolor 1 #> 84           6.0         2.7          5.1         1.6 versicolor 1 #> 85           5.4         3.0          4.5         1.5 versicolor 1 #> 86           6.0         3.4          4.5         1.6 versicolor 1 #> 87           6.7         3.1          4.7         1.5 versicolor 1 #> 88           6.3         2.3          4.4         1.3 versicolor 1 #> 89           5.6         3.0          4.1         1.3 versicolor 1 #> 90           5.5         2.5          4.0         1.3 versicolor 1 #> 91           5.5         2.6          4.4         1.2 versicolor 1 #> 92           6.1         3.0          4.6         1.4 versicolor 1 #> 93           5.8         2.6          4.0         1.2 versicolor 1 #> 94           5.0         2.3          3.3         1.0 versicolor 1 #> 95           5.6         2.7          4.2         1.3 versicolor 1 #> 96           5.7         3.0          4.2         1.2 versicolor 1 #> 97           5.7         2.9          4.2         1.3 versicolor 1 #> 98           6.2         2.9          4.3         1.3 versicolor 1 #> 99           5.1         2.5          3.0         1.1 versicolor 1 #> 100          5.7         2.8          4.1         1.3 versicolor 1 #> 101          6.3         3.3          6.0         2.5  virginica 1 #> 102          5.8         2.7          5.1         1.9  virginica 2 #> 103          7.1         3.0          5.9         2.1  virginica 1 #> 104          6.3         2.9          5.6         1.8  virginica 1 #> 105          6.5         3.0          5.8         2.2  virginica 1 #> 106          7.6         3.0          6.6         2.1  virginica 1 #> 107          4.9         2.5          4.5         1.7  virginica 1 #> 108          7.3         2.9          6.3         1.8  virginica 1 #> 109          6.7         2.5          5.8         1.8  virginica 1 #> 110          7.2         3.6          6.1         2.5  virginica 1 #> 111          6.5         3.2          5.1         2.0  virginica 1 #> 112          6.4         2.7          5.3         1.9  virginica 1 #> 113          6.8         3.0          5.5         2.1  virginica 1 #> 114          5.7         2.5          5.0         2.0  virginica 1 #> 115          5.8         2.8          5.1         2.4  virginica 1 #> 116          6.4         3.2          5.3         2.3  virginica 1 #> 117          6.5         3.0          5.5         1.8  virginica 1 #> 118          7.7         3.8          6.7         2.2  virginica 1 #> 119          7.7         2.6          6.9         2.3  virginica 1 #> 120          6.0         2.2          5.0         1.5  virginica 1 #> 121          6.9         3.2          5.7         2.3  virginica 1 #> 122          5.6         2.8          4.9         2.0  virginica 1 #> 123          7.7         2.8          6.7         2.0  virginica 1 #> 124          6.3         2.7          4.9         1.8  virginica 1 #> 125          6.7         3.3          5.7         2.1  virginica 1 #> 126          7.2         3.2          6.0         1.8  virginica 1 #> 127          6.2         2.8          4.8         1.8  virginica 1 #> 128          6.1         3.0          4.9         1.8  virginica 1 #> 129          6.4         2.8          5.6         2.1  virginica 1 #> 130          7.2         3.0          5.8         1.6  virginica 1 #> 131          7.4         2.8          6.1         1.9  virginica 1 #> 132          7.9         3.8          6.4         2.0  virginica 1 #> 133          6.4         2.8          5.6         2.2  virginica 1 #> 134          6.3         2.8          5.1         1.5  virginica 1 #> 135          6.1         2.6          5.6         1.4  virginica 1 #> 136          7.7         3.0          6.1         2.3  virginica 1 #> 137          6.3         3.4          5.6         2.4  virginica 1 #> 138          6.4         3.1          5.5         1.8  virginica 1 #> 139          6.0         3.0          4.8         1.8  virginica 1 #> 140          6.9         3.1          5.4         2.1  virginica 1 #> 141          6.7         3.1          5.6         2.4  virginica 1 #> 142          6.9         3.1          5.1         2.3  virginica 1 #> 143          5.8         2.7          5.1         1.9  virginica 2 #> 144          6.8         3.2          5.9         2.3  virginica 1 #> 145          6.7         3.3          5.7         2.5  virginica 1 #> 146          6.7         3.0          5.2         2.3  virginica 1 #> 147          6.3         2.5          5.0         1.9  virginica 1 #> 148          6.5         3.0          5.2         2.0  virginica 1 #> 149          6.2         3.4          5.4         2.3  virginica 1 #> 150          5.9         3.0          5.1         1.8  virginica 1"},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut numeric vector into factor vector — cut","text":"","code":"cut(x, at, label = NULL, ...)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut numeric vector into factor vector — cut","text":"x numeric vector cut factors. numeric vector specifying breakpoints categories cutting vector. single value provided, function create breaks using method [base::cut]. multiple values provided, treated specific breaks. label Optional labels resulting factor levels. provided, labels automatically generated based breaks. ... Additional arguments passed [base::cut] x numeric.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/cut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut numeric vector into factor vector — cut","text":"factor representing cut vector factor levels assigned based breaks categories.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/cut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cut numeric vector into factor vector — cut","text":"function cuts numeric vector factors based specified breaks categories. input vector numeric, function delegates base R cut function.","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/cut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut numeric vector into factor vector — cut","text":"","code":"x <- c(1, 2, 3, 4, 5) cut(x, 2) #> [1] 1-2 1-2 3-5 3-5 3-5 #> Levels: 1-2 3-5"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/egen.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a continuous variable into groups — egen","title":"Convert a continuous variable into groups — egen","text":"function deprecated realized special case cut function.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/egen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a continuous variable into groups — egen","text":"","code":"egen(data, var, at = NULL, label = NULL, new_var = NULL, ...)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/egen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a continuous variable into groups — egen","text":"data data.frame var existing variable either number numeric vector label Labels groups new_var Name new variable ... Additional arguments passed cut","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/egen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a continuous variable into groups — egen","text":"","code":"data <- data.frame(x = 1:10) egen(data, x, at = c(3, 7), label = c(\"low\", \"medium\", \"high\")) #> Warning: `egen()` was deprecated in mStats 3.4.0. #> ℹ Please use `cut()` instead. #>         x #> 1     low #> 2     low #> 3  medium #> 4  medium #> 5  medium #> 6  medium #> 7    high #> 8    high #> 9    high #> 10   high egen(data, x, at = c(3, 7), label = c(\"low\", \"medium\", \"high\"), new_var = \"group\") #>     x  group #> 1   1    low #> 2   2    low #> 3   3 medium #> 4   4 medium #> 5   5 medium #> 6   6 medium #> 7   7   high #> 8   8   high #> 9   9   high #> 10 10   high"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach labels to data and variables — label","title":"Attach labels to data and variables — label","text":"function manipulates labels. supports different classes objects, including default objects, data frames, types.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach labels to data and variables — label","text":"","code":"label(x, label = NULL)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach labels to data and variables — label","text":"x object label added modified. label character string specifying label assigned variable.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach labels to data and variables — label","text":"modified object updated label.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attach labels to data and variables — label","text":"used dplyr's [mutate] function, function allows easy labeling variables within data frame. used data frame, function labels dataset , label can checked using [codebook] function.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach labels to data and variables — label","text":"","code":"library(dplyr)  iris |>    mutate(Species = label(Species, 'Species of iris flower')) |>    codebook() #> $ dataset: mutate(iris, Species = label(Species, \"Species of iris flower\")) #> $ Row: 150 #> $ Col: 5 #>   name         type  miss complete unique label                  #> 1 Sepal.Length <dbl> 0    1.00     35                            #> 2 Sepal.Width  <dbl> 0    1.00     23                            #> 3 Petal.Length <dbl> 0    1.00     43                            #> 4 Petal.Width  <dbl> 0    1.00     22                            #> 5 Species      <fct> 0    1.00      3     Species of iris flower  iris |>    label(\"Iris dataset\") |>    codebook() #> $ dataset: label(iris, \"Iris dataset\") #> $ label: Iris dataset #> $ Row: 150 #> $ Col: 5 #>   name         type  miss complete unique label #> 1 Sepal.Length <dbl> 0    1.00     35           #> 2 Sepal.Width  <dbl> 0    1.00     23           #> 3 Petal.Length <dbl> 0    1.00     43           #> 4 Petal.Width  <dbl> 0    1.00     22           #> 5 Species      <fct> 0    1.00      3"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/mStats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mStats: Medical Statistics & Epidemiological Analysis — mStats-package","title":"mStats: Medical Statistics & Epidemiological Analysis — mStats-package","text":"set tidyverse-friendly functions data management, calculation epidemiological measures, statistical analysis, table creation.","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/mStats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mStats: Medical Statistics & Epidemiological Analysis — mStats-package","text":"Maintainer: Myo Minn Oo dr.myominnoo@gmail.com (ORCID)","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/tag_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag Duplicates — tag_duplicates","text":"","code":"tag_duplicates(..., .add_tags = FALSE)"},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/tag_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag Duplicates — tag_duplicates","text":"... Columns use identifying duplicates. .add_tags logical return three indicator columns: .n_, .N_, .dup_.","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/tag_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag Duplicates — tag_duplicates","text":"tibble three columns: .n_, .N_, .dup_. .n_ represents running counter within group variables, indicating number current observation. .N_ represents total number observations within group variables. .dup_ logical column indicating whether observation duplicate (TRUE) (FALSE).","code":""},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/tag_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tag Duplicates — tag_duplicates","text":"function identifies tags duplicate observations based specified variables. function mimics functionality Stata's duplicates command R. calculates number duplicates provides report duplicates based specified variables. function utilizes n_ N_ functions counting grouping observations.","code":""},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/reference/tag_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag Duplicates — tag_duplicates","text":"","code":"library(dplyr)  # Example with a custom dataset data <- data.frame(   x = c(1, 1, 2, 2, 3, 4, 4, 5),   y = letters[1:8] )  # Identify and tag duplicates based on the \"x\" variable data %>% mutate(tag_duplicates(x)) #> $ Report of duplicates #>   in terms of x #>  copies observations surplus #>       1            2       0 #>       2            6       3 #>   x y .n_ .N_ .dup_ #> 1 1 a   1   2 FALSE #> 2 1 b   2   2  TRUE #> 3 2 c   1   2 FALSE #> 4 2 d   2   2  TRUE #> 5 3 e   1   1 FALSE #> 6 4 f   1   2 FALSE #> 7 4 g   2   2  TRUE #> 8 5 h   1   1 FALSE  # Identify and tag duplicates based on multiple variables data %>% mutate(tag_duplicates(x, y)) #> $ Report of duplicates #>   in terms of x #>  copies observations surplus #>       1            8       0 #>   x y .n_ .N_ .dup_ #> 1 1 a   1   1 FALSE #> 2 1 b   1   1 FALSE #> 3 2 c   1   1 FALSE #> 4 2 d   1   1 FALSE #> 5 3 e   1   1 FALSE #> 6 4 f   1   1 FALSE #> 7 4 g   1   1 FALSE #> 8 5 h   1   1 FALSE  # Identify and tag duplicates based on all variables data %>% mutate(tag_duplicates(everything())) #> $ Report of duplicates #>   in terms of all variables #>  copies observations surplus #>       1            8       0 #>   x y .n_ .N_ .dup_ #> 1 1 a   1   1 FALSE #> 2 1 b   1   1 FALSE #> 3 2 c   1   1 FALSE #> 4 2 d   1   1 FALSE #> 5 3 e   1   1 FALSE #> 6 4 f   1   1 FALSE #> 7 4 g   1   1 FALSE #> 8 5 h   1   1 FALSE  if (FALSE) { ## STATA example dupxmpl <- haven::read_dta(\"https://www.stata-press.com/data/r18/dupxmpl.dta\") dupxmpl |> mutate(tag_duplicates(everything())) }"},{"path":[]},{"path":"https://myominnoo.github.io/mStats/, https://github.com/myominnoo/mStats/news/index.html","id":"tag_duplicates-3-5-0","dir":"Changelog","previous_headings":"","what":"tag_duplicates","title":"mStats 3.5.0","text":"Previous duplicates functions dev versions replaced tag_duplicates. .add_tags argument allows three columns processing duplicated rows.","code":""}]
